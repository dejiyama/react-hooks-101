{"ast":null,"code":"var _jsxFileName = \"/Users/dejimayamato/react-hooks-101/src/App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  //配列を返し、二つの配列を返す。\n  //名前の付け方は、一つ目がxであれば、二つ目はそれを設定できる意味合いを込めてsetXとする。\n  const [count, setCount] = useState(0);\n\n  const increment = () => setCount(count + 1);\n\n  const decrement = () => setCount(count - 1);\n\n  const reset = () => setCount(0);\n\n  const double = () => setCount(count * 2); //if文を使うと長くなるので、単純な演算処理は三項演算子でできないか考える\n\n\n  const divideThree = () => setCount(count % 3 === 0 ? count / 3 : count);\n\n  return (\n    /*#__PURE__*/\n    //React.Fragmentは消しても問題ない。\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, \"count: \", count), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, \"-1\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, \"+1\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, \"reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: double,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, \"x2\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: divideThree,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, \"divide by 3\"))\n  );\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/dejimayamato/react-hooks-101/src/App.js"],"names":["React","useState","App","count","setCount","increment","decrement","reset","double","divideThree"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACf;AACA;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMI,SAAS,GAAG,MAAMD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAhC;;AACA,QAAMG,SAAS,GAAG,MAAMF,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAhC;;AACA,QAAMI,KAAK,GAAG,MAAMH,QAAQ,CAAC,CAAD,CAA5B;;AACA,QAAMI,MAAM,GAAG,MAAMJ,QAAQ,CAAED,KAAK,GAAG,CAAV,CAA7B,CAPgB,CAQhB;;;AACA,QAAMM,WAAW,GAAG,MAAML,QAAQ,CAAED,KAAK,GAAC,CAAN,KAAY,CAAZ,GAAgBA,KAAK,GAAC,CAAtB,GAA0BA,KAA5B,CAAlC;;AAEA;AAAA;AACE;AACA,2DACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAb,CADF,eAGE;AAAQ,MAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF;AAFF;AAYD,CAvBD;;AAyBA,eAAeP,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n   //配列を返し、二つの配列を返す。\n   //名前の付け方は、一つ目がxであれば、二つ目はそれを設定できる意味合いを込めてsetXとする。\n  const [count, setCount] = useState(0)\n  const increment = () => setCount(count + 1)\n  const decrement = () => setCount(count - 1)\n  const reset = () => setCount(0)\n  const double = () => setCount( count * 2 )\n  //if文を使うと長くなるので、単純な演算処理は三項演算子でできないか考える\n  const divideThree = () => setCount( count%3 === 0 ? count/3 : count )\n\n  return (\n    //React.Fragmentは消しても問題ない。\n    <>\n      <div>count: {count}</div>\n      {/* <button onClick={increment}>+1</button> */}\n      <button onClick={decrement}>-1</button>\n      <button onClick={increment}>+1</button>\n      <button onClick={reset}>reset</button>\n      <button onClick={double}>x2</button>\n      <button onClick={divideThree}>divide by 3</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}