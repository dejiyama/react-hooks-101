{"ast":null,"code":"var _jsxFileName = \"/Users/dejimayamato/react-hooks-101/src/components/Event.js\";\nimport React from 'react';\n\nconst Event = ({\n  dispatch,\n  event\n}) => {\n  console.log('hi');\n  const id = event.id;\n\n  const handleClickDeleteButton = () => {\n    const result = window.confirm(`${id}イベントを本当に削除しても良いですか？`);\n\n    if (result) {\n      dispatch({\n        type: 'DELETE_EVENT',\n        id\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, event.title), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, event.body), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleClickDeleteButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"\\u524A\\u9664\")));\n};\n\nexport default Event; // {\n//     // mapで同じ処理を回している。そうすると同じtrがなんども生成出力されるので、一個一個を識別できない。よって識別するためのkeyをつける必要がある。\n//     // mapの仕様で決まっているindexを第二引数として受け取りそれを、keyとして利用する。\n//     state.map((event, index) => {\n//       //特別に関数を定義しない場合は、丸括弧で一括returnしてもいいが、関数を定義する場合は、ブラケットを開いて、関数定義とreturnを区別する必要がある。\n//       const id = event.id\n//       const handleClickDeleteButton = () =>{\n//         dispatch({ type: 'DELETE_EVENT', id })\n//       }\n//       return(\n//         <tr key={index}>\n//           <td>{id}</td>\n//           <td>{event.title}</td>\n//           <td>{event.body}</td>\n//           <td><button type=\"button\" className=\"btn btn-danger\" onClick={handleClickDeleteButton}>削除</button></td>\n//       </tr>\n//       )})\n//   }","map":{"version":3,"sources":["/Users/dejimayamato/react-hooks-101/src/components/Event.js"],"names":["React","Event","dispatch","event","console","log","id","handleClickDeleteButton","result","window","confirm","type","title","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,QAAMC,EAAE,GAAGH,KAAK,CAACG,EAAjB;;AACA,QAAMC,uBAAuB,GAAG,MAAK;AACjC,UAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAgB,GAAEJ,EAAG,qBAArB,CAAf;;AACA,QAAIE,MAAJ,EAAW;AAACN,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,cAAR;AAAwBL,QAAAA;AAAxB,OAAD,CAAR;AAAuC;AACtD,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,EAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACS,KAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAK,CAACU,IAAX,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAiD,IAAA,OAAO,EAAEN,uBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CAJJ,CADJ;AAQH,CAhBD;;AAkBA,eAAeN,KAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\n\nconst Event = ({ dispatch, event }) => {\n    console.log('hi');\n    const id = event.id\n    const handleClickDeleteButton = () =>{\n        const result = window.confirm(`${id}イベントを本当に削除しても良いですか？`)\n        if (result){dispatch({ type: 'DELETE_EVENT', id })}\n    }\n\n    return(\n        <tr>\n            <td>{id}</td>\n            <td>{event.title}</td>\n            <td>{event.body}</td>\n            <td><button type=\"button\" className=\"btn btn-danger\" onClick={handleClickDeleteButton}>削除</button></td>\n        </tr>\n    )\n}\n\nexport default Event\n// {\n//     // mapで同じ処理を回している。そうすると同じtrがなんども生成出力されるので、一個一個を識別できない。よって識別するためのkeyをつける必要がある。\n//     // mapの仕様で決まっているindexを第二引数として受け取りそれを、keyとして利用する。\n//     state.map((event, index) => {\n//       //特別に関数を定義しない場合は、丸括弧で一括returnしてもいいが、関数を定義する場合は、ブラケットを開いて、関数定義とreturnを区別する必要がある。\n//       const id = event.id\n//       const handleClickDeleteButton = () =>{\n//         dispatch({ type: 'DELETE_EVENT', id })\n//       }\n\n//       return(\n//         <tr key={index}>\n//           <td>{id}</td>\n//           <td>{event.title}</td>\n//           <td>{event.body}</td>\n//           <td><button type=\"button\" className=\"btn btn-danger\" onClick={handleClickDeleteButton}>削除</button></td>\n//       </tr>\n//       )})\n//   }"]},"metadata":{},"sourceType":"module"}