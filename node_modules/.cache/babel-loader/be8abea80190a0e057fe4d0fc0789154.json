{"ast":null,"code":"var _jsxFileName = \"/Users/dejimayamato/react-hooks-101/src/components/Event.js\";\nimport React, { useContext } from 'react';\nimport { ADD_OPERATION_LOGS, DELETE_EVENT } from '../actions/index.js';\nimport AppContext from '../contexts/AppContext';\nimport { timeCurrentIso8601 } from '../utils';\n\nconst Event = ({\n  event\n}) => {\n  const id = event.id;\n  const {\n    dispatch\n  } = useContext(AppContext);\n\n  const handleClickDeleteButton = () => {\n    const result = window.confirm(`${id}イベントを本当に削除しても良いですか？`);\n\n    if (result) {\n      dispatch({\n        type: DELETE_EVENT,\n        id\n      });\n      dispatch({\n        type: ADD_OPERATION_LOGS,\n        description: `イベントを(id=${id})を削除しました。`,\n        operatedAt: timeCurrentIso8601()\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, event.title), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, event.body), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger\",\n    onClick: handleClickDeleteButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"\\u524A\\u9664\")));\n};\n\nexport default Event; // {\n//     // mapで同じ処理を回している。そうすると同じtrがなんども生成出力されるので、一個一個を識別できない。よって識別するためのkeyをつける必要がある。\n//     // mapの仕様で決まっているindexを第二引数として受け取りそれを、keyとして利用する。\n//     state.map((event, index) => {\n//       //特別に関数を定義しない場合は、丸括弧で一括returnしてもいいが、関数を定義する場合は、ブラケットを開いて、関数定義とreturnを区別する必要がある。\n//       const id = event.id\n//       const handleClickDeleteButton = () =>{\n//         dispatch({ type: 'DELETE_EVENT', id })\n//       }\n//       return(\n//         <tr key={index}>\n//           <td>{id}</td>\n//           <td>{event.title}</td>\n//           <td>{event.body}</td>\n//           <td><button type=\"button\" className=\"btn btn-danger\" onClick={handleClickDeleteButton}>削除</button></td>\n//       </tr>\n//       )})\n//   }","map":{"version":3,"sources":["/Users/dejimayamato/react-hooks-101/src/components/Event.js"],"names":["React","useContext","ADD_OPERATION_LOGS","DELETE_EVENT","AppContext","timeCurrentIso8601","Event","event","id","dispatch","handleClickDeleteButton","result","window","confirm","type","description","operatedAt","title","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,qBAAjD;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,kBAAT,QAAmC,UAAnC;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACzB,QAAMC,EAAE,GAAGD,KAAK,CAACC,EAAjB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeR,UAAU,CAACG,UAAD,CAA/B;;AACA,QAAMM,uBAAuB,GAAG,MAAK;AACjC,UAAMC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAgB,GAAEL,EAAG,qBAArB,CAAf;;AACA,QAAIG,MAAJ,EAAW;AACPF,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEX,YAAR;AAAsBK,QAAAA;AAAtB,OAAD,CAAR;AAEAC,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEZ,kBADD;AAELa,QAAAA,WAAW,EAAG,YAAWP,EAAG,WAFvB;AAGLQ,QAAAA,UAAU,EAAEX,kBAAkB;AAHzB,OAAD,CAAR;AAKH;AACJ,GAXD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,EAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACU,KAAX,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKV,KAAK,CAACW,IAAX,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAiD,IAAA,OAAO,EAAER,uBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CAJJ,CADJ;AAQH,CAxBD;;AA0BA,eAAeJ,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useContext } from 'react';\nimport { ADD_OPERATION_LOGS, DELETE_EVENT } from '../actions/index.js'\n\nimport AppContext from '../contexts/AppContext'\nimport { timeCurrentIso8601 } from '../utils'\n\n\nconst Event = ({ event }) => {\n    const id = event.id\n    const { dispatch } = useContext(AppContext)\n    const handleClickDeleteButton = () =>{\n        const result = window.confirm(`${id}イベントを本当に削除しても良いですか？`)\n        if (result){\n            dispatch({ type: DELETE_EVENT, id })\n\n            dispatch({\n                type: ADD_OPERATION_LOGS,\n                description: `イベントを(id=${id})を削除しました。`,\n                operatedAt: timeCurrentIso8601()\n            })\n        }\n    }\n\n    return(\n        <tr>\n            <td>{id}</td>\n            <td>{event.title}</td>\n            <td>{event.body}</td>\n            <td><button type=\"button\" className=\"btn btn-danger\" onClick={handleClickDeleteButton}>削除</button></td>\n        </tr>\n    )\n}\n\nexport default Event\n\n\n// {\n//     // mapで同じ処理を回している。そうすると同じtrがなんども生成出力されるので、一個一個を識別できない。よって識別するためのkeyをつける必要がある。\n//     // mapの仕様で決まっているindexを第二引数として受け取りそれを、keyとして利用する。\n//     state.map((event, index) => {\n//       //特別に関数を定義しない場合は、丸括弧で一括returnしてもいいが、関数を定義する場合は、ブラケットを開いて、関数定義とreturnを区別する必要がある。\n//       const id = event.id\n//       const handleClickDeleteButton = () =>{\n//         dispatch({ type: 'DELETE_EVENT', id })\n//       }\n\n//       return(\n//         <tr key={index}>\n//           <td>{id}</td>\n//           <td>{event.title}</td>\n//           <td>{event.body}</td>\n//           <td><button type=\"button\" className=\"btn btn-danger\" onClick={handleClickDeleteButton}>削除</button></td>\n//       </tr>\n//       )})\n//   }"]},"metadata":{},"sourceType":"module"}